<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="717" errors="0" failures="17" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2018-10-23" time="17:01:48">
  <environment user="NDBHSV-DA-01$" machine-name="NDBHSV-DA-01" cwd="C:\agent\_work\5\s" user-domain="NODEIT" platform="Microsoft Windows Server 2016 Standard|C:\Windows|\Device\Harddisk0\Partition2" nunit-version="2.5.8.0" os-version="10.0.14393" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="18.1751" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\agent\_work\5\s\Tests\ModuleImport.Tests.ps1" executed="True" result="Success" success="True" time="1.2632" asserts="0" description="C:\agent\_work\5\s\Tests\ModuleImport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PowerShell Module Import Test" executed="True" result="Success" success="True" time="1.2632" asserts="0" description="PowerShell Module Import Test">
            <results>
              <test-case description="Module Path should exist" name="PowerShell Module Import Test.Module Path should exist" time="0.7561" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="Should be imported successfully" name="PowerShell Module Import Test.Should be imported successfully" time="0.5071" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\agent\_work\5\s\Tests\PSSA.tests.ps1" executed="True" result="Failure" success="False" time="16.9118" asserts="0" description="C:\agent\_work\5\s\Tests\PSSA.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing against PSSA rules" executed="True" result="Failure" success="False" time="16.9118" asserts="0" description="Testing against PSSA rules">
            <results>
              <test-suite type="TestFixture" name="PSSA Standard Rules" executed="True" result="Failure" success="False" time="16.9118" asserts="0" description="PSSA Standard Rules">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="1.4755" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.1385" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.1139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.4483" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.1025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0288" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="2.1474" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0372" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.0945" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.1603" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 29.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="1.6248" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0536" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 3.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.3528" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.1018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.1032" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 16.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.2537" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0352" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0257" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.234" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0334" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0275" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.4219" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0338" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0233" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.1321" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0234" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.1327" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0235" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="0.1312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0228" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAlignAssignmentStatement" time="1.0866" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingCmdletAliases" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalAliases" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalFunctions" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidGlobalVars" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidInvokingEmptyMembers" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPositionalParameters" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedCmdletChar" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSReservedParams" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidShouldContinueWithoutForce" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidTrailingWhitespace" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingComputerNameHardcoded" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingInvokeExpression" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingPlainTextForPassword" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWMICmdlet" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSAvoidUsingWriteHost" time="0.0844" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 10.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSMisleadingBacktick" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMisleadingBacktick" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSMissingModuleManifestField" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceCloseBrace" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPlaceOpenBrace" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSProvideCommentHelp" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseApprovedVerbs" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCmdletCorrectly" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseCompatibleCmdlets" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentIndentation" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseConsistentWhitespace" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseLiteralInitializerForHashtable" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseOutputTypeCorrectly" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUsePSCredentialType" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSShouldProcess" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSingularNouns" time="0.0248" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 1.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\agent\_work\5\s\Tests\PSSA.tests.ps1: line 20
20:                         $failures.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseSupportsShouldProcess" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseToExportFieldsInManifest" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSUseUTF8EncodingForHelpFile" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscExamplesPresent" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCDscTestsPresent" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Testing against PSSA rules.PSSA Standard Rules.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>